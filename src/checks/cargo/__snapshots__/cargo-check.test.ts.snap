// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checks/cargo-check converts buggy cargo-check 1`] = `
Object {
  "completed_at": Any<String>,
  "conclusion": "skipped",
  "head_sha": "11963e3cb7ecbb9247f638cc0fb047173a62cf7a",
  "name": "cargo-check",
  "output": Object {
    "summary": "",
    "title": "Unexpected check output",
  },
  "status": "completed",
}
`;

exports[`checks/cargo-check converts failed cargo-check 1`] = `
Object {
  "completed_at": Any<String>,
  "conclusion": "failure",
  "head_sha": "11963e3cb7ecbb9247f638cc0fb047173a62cf7a",
  "name": "cargo-check",
  "output": Object {
    "annotations": Array [
      Object {
        "annotation_level": "failure",
        "end_line": 3,
        "message": "warning: unused import: \`std::io::BufReader\`
 --> src/main.rs:3:5
  |
3 | use std::io::BufReader;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: \`#[warn(unused_imports)]\` on by default

",
        "path": "src/main.rs",
        "raw_details": "{
    \\"rendered\\": \\"warning: unused import: \`std::io::BufReader\`\\\\n --> src/main.rs:3:5\\\\n  |\\\\n3 | use std::io::BufReader;\\\\n  |     ^^^^^^^^^^^^^^^^^^\\\\n  |\\\\n  = note: \`#[warn(unused_imports)]\` on by default\\\\n\\\\n\\",
    \\"children\\": [
        {
            \\"code\\": null,
            \\"level\\": \\"note\\",
            \\"message\\": \\"\`#[warn(unused_imports)]\` on by default\\",
            \\"rendered\\": null,
            \\"spans\\": []
        },
        {
            \\"code\\": null,
            \\"level\\": \\"help\\",
            \\"message\\": \\"remove the whole \`use\` item\\",
            \\"rendered\\": null,
            \\"spans\\": [
                {
                    \\"byte_end\\": 52,
                    \\"byte_start\\": 29,
                    \\"column_end\\": 24,
                    \\"column_start\\": 1,
                    \\"expansion\\": null,
                    \\"file_name\\": \\"src/main.rs\\",
                    \\"is_primary\\": true,
                    \\"label\\": null,
                    \\"line_end\\": 3,
                    \\"line_start\\": 3,
                    \\"suggested_replacement\\": \\"\\",
                    \\"suggestion_applicability\\": \\"MachineApplicable\\",
                    \\"text\\": [
                        {
                            \\"highlight_end\\": 24,
                            \\"highlight_start\\": 1,
                            \\"text\\": \\"use std::io::BufReader;\\"
                        }
                    ]
                }
            ]
        }
    ],
    \\"code\\": {
        \\"code\\": \\"unused_imports\\",
        \\"explanation\\": null
    },
    \\"level\\": \\"warning\\",
    \\"message\\": \\"unused import: \`std::io::BufReader\`\\",
    \\"spans\\": [
        {
            \\"byte_end\\": 51,
            \\"byte_start\\": 33,
            \\"column_end\\": 23,
            \\"column_start\\": 5,
            \\"expansion\\": null,
            \\"file_name\\": \\"src/main.rs\\",
            \\"is_primary\\": true,
            \\"label\\": null,
            \\"line_end\\": 3,
            \\"line_start\\": 3,
            \\"suggested_replacement\\": null,
            \\"suggestion_applicability\\": null,
            \\"text\\": [
                {
                    \\"highlight_end\\": 23,
                    \\"highlight_start\\": 5,
                    \\"text\\": \\"use std::io::BufReader;\\"
                }
            ]
        }
    ]
}",
        "start_line": 3,
        "title": "unused import: \`std::io::BufReader\`",
      },
      Object {
        "annotation_level": "failure",
        "end_line": 15,
        "message": "warning: unused variable: \`foo\`
  --> src/main.rs:15:11
   |
15 |       let foo = foo();
   |           ^^^ help: if this is intentional, prefix it with an underscore: \`_foo\`
   |
   = note: \`#[warn(unused_variables)]\` on by default

",
        "path": "src/main.rs",
        "raw_details": "{
    \\"rendered\\": \\"warning: unused variable: \`foo\`\\\\n  --> src/main.rs:15:11\\\\n   |\\\\n15 |       let foo = foo();\\\\n   |           ^^^ help: if this is intentional, prefix it with an underscore: \`_foo\`\\\\n   |\\\\n   = note: \`#[warn(unused_variables)]\` on by default\\\\n\\\\n\\",
    \\"children\\": [
        {
            \\"code\\": null,
            \\"level\\": \\"note\\",
            \\"message\\": \\"\`#[warn(unused_variables)]\` on by default\\",
            \\"rendered\\": null,
            \\"spans\\": []
        },
        {
            \\"code\\": null,
            \\"level\\": \\"help\\",
            \\"message\\": \\"if this is intentional, prefix it with an underscore\\",
            \\"rendered\\": null,
            \\"spans\\": [
                {
                    \\"byte_end\\": 160,
                    \\"byte_start\\": 157,
                    \\"column_end\\": 14,
                    \\"column_start\\": 11,
                    \\"expansion\\": null,
                    \\"file_name\\": \\"src/main.rs\\",
                    \\"is_primary\\": true,
                    \\"label\\": null,
                    \\"line_end\\": 15,
                    \\"line_start\\": 15,
                    \\"suggested_replacement\\": \\"_foo\\",
                    \\"suggestion_applicability\\": \\"MachineApplicable\\",
                    \\"text\\": [
                        {
                            \\"highlight_end\\": 14,
                            \\"highlight_start\\": 11,
                            \\"text\\": \\"      let foo = foo();\\"
                        }
                    ]
                }
            ]
        }
    ],
    \\"code\\": {
        \\"code\\": \\"unused_variables\\",
        \\"explanation\\": null
    },
    \\"level\\": \\"warning\\",
    \\"message\\": \\"unused variable: \`foo\`\\",
    \\"spans\\": [
        {
            \\"byte_end\\": 160,
            \\"byte_start\\": 157,
            \\"column_end\\": 14,
            \\"column_start\\": 11,
            \\"expansion\\": null,
            \\"file_name\\": \\"src/main.rs\\",
            \\"is_primary\\": true,
            \\"label\\": null,
            \\"line_end\\": 15,
            \\"line_start\\": 15,
            \\"suggested_replacement\\": null,
            \\"suggestion_applicability\\": null,
            \\"text\\": [
                {
                    \\"highlight_end\\": 14,
                    \\"highlight_start\\": 11,
                    \\"text\\": \\"      let foo = foo();\\"
                }
            ]
        }
    ]
}",
        "start_line": 15,
        "title": "unused variable: \`foo\`",
      },
      Object {
        "annotation_level": "failure",
        "end_line": 20,
        "message": "warning: unused variable: \`f\`
  --> src/main.rs:20:9
   |
20 |     let f = File::open(\\"foo.txt\\");
   |         ^ help: if this is intentional, prefix it with an underscore: \`_f\`

",
        "path": "src/main.rs",
        "raw_details": "{
    \\"rendered\\": \\"warning: unused variable: \`f\`\\\\n  --> src/main.rs:20:9\\\\n   |\\\\n20 |     let f = File::open(\\\\\\"foo.txt\\\\\\");\\\\n   |         ^ help: if this is intentional, prefix it with an underscore: \`_f\`\\\\n\\\\n\\",
    \\"children\\": [
        {
            \\"code\\": null,
            \\"level\\": \\"help\\",
            \\"message\\": \\"if this is intentional, prefix it with an underscore\\",
            \\"rendered\\": null,
            \\"spans\\": [
                {
                    \\"byte_end\\": 213,
                    \\"byte_start\\": 212,
                    \\"column_end\\": 10,
                    \\"column_start\\": 9,
                    \\"expansion\\": null,
                    \\"file_name\\": \\"src/main.rs\\",
                    \\"is_primary\\": true,
                    \\"label\\": null,
                    \\"line_end\\": 20,
                    \\"line_start\\": 20,
                    \\"suggested_replacement\\": \\"_f\\",
                    \\"suggestion_applicability\\": \\"MachineApplicable\\",
                    \\"text\\": [
                        {
                            \\"highlight_end\\": 10,
                            \\"highlight_start\\": 9,
                            \\"text\\": \\"    let f = File::open(\\\\\\"foo.txt\\\\\\");\\"
                        }
                    ]
                }
            ]
        }
    ],
    \\"code\\": {
        \\"code\\": \\"unused_variables\\",
        \\"explanation\\": null
    },
    \\"level\\": \\"warning\\",
    \\"message\\": \\"unused variable: \`f\`\\",
    \\"spans\\": [
        {
            \\"byte_end\\": 213,
            \\"byte_start\\": 212,
            \\"column_end\\": 10,
            \\"column_start\\": 9,
            \\"expansion\\": null,
            \\"file_name\\": \\"src/main.rs\\",
            \\"is_primary\\": true,
            \\"label\\": null,
            \\"line_end\\": 20,
            \\"line_start\\": 20,
            \\"suggested_replacement\\": null,
            \\"suggestion_applicability\\": null,
            \\"text\\": [
                {
                    \\"highlight_end\\": 10,
                    \\"highlight_start\\": 9,
                    \\"text\\": \\"    let f = File::open(\\\\\\"foo.txt\\\\\\");\\"
                }
            ]
        }
    ]
}",
        "start_line": 20,
        "title": "unused variable: \`f\`",
      },
      Object {
        "annotation_level": "failure",
        "end_line": 29,
        "message": "warning: value assigned to \`foo\` is never read
  --> src/main.rs:29:9
   |
29 |     let mut foo = 0;
   |         ^^^^^^^
   |
   = note: \`#[warn(unused_assignments)]\` on by default
   = help: maybe it is overwritten before being read?

",
        "path": "src/main.rs",
        "raw_details": "{
    \\"rendered\\": \\"warning: value assigned to \`foo\` is never read\\\\n  --> src/main.rs:29:9\\\\n   |\\\\n29 |     let mut foo = 0;\\\\n   |         ^^^^^^^\\\\n   |\\\\n   = note: \`#[warn(unused_assignments)]\` on by default\\\\n   = help: maybe it is overwritten before being read?\\\\n\\\\n\\",
    \\"children\\": [
        {
            \\"code\\": null,
            \\"level\\": \\"note\\",
            \\"message\\": \\"\`#[warn(unused_assignments)]\` on by default\\",
            \\"rendered\\": null,
            \\"spans\\": []
        },
        {
            \\"code\\": null,
            \\"level\\": \\"help\\",
            \\"message\\": \\"maybe it is overwritten before being read?\\",
            \\"rendered\\": null,
            \\"spans\\": []
        }
    ],
    \\"code\\": {
        \\"code\\": \\"unused_assignments\\",
        \\"explanation\\": null
    },
    \\"level\\": \\"warning\\",
    \\"message\\": \\"value assigned to \`foo\` is never read\\",
    \\"spans\\": [
        {
            \\"byte_end\\": 355,
            \\"byte_start\\": 348,
            \\"column_end\\": 16,
            \\"column_start\\": 9,
            \\"expansion\\": null,
            \\"file_name\\": \\"src/main.rs\\",
            \\"is_primary\\": true,
            \\"label\\": null,
            \\"line_end\\": 29,
            \\"line_start\\": 29,
            \\"suggested_replacement\\": null,
            \\"suggestion_applicability\\": null,
            \\"text\\": [
                {
                    \\"highlight_end\\": 16,
                    \\"highlight_start\\": 9,
                    \\"text\\": \\"    let mut foo = 0;\\"
                }
            ]
        }
    ]
}",
        "start_line": 29,
        "title": "value assigned to \`foo\` is never read",
      },
      Object {
        "annotation_level": "failure",
        "end_line": 33,
        "message": "warning: value assigned to \`bar\` is never read
  --> src/main.rs:33:5
   |
33 |     bar = foo;
   |     ^^^
   |
   = help: maybe it is overwritten before being read?

",
        "path": "src/main.rs",
        "raw_details": "{
    \\"rendered\\": \\"warning: value assigned to \`bar\` is never read\\\\n  --> src/main.rs:33:5\\\\n   |\\\\n33 |     bar = foo;\\\\n   |     ^^^\\\\n   |\\\\n   = help: maybe it is overwritten before being read?\\\\n\\\\n\\",
    \\"children\\": [
        {
            \\"code\\": null,
            \\"level\\": \\"help\\",
            \\"message\\": \\"maybe it is overwritten before being read?\\",
            \\"rendered\\": null,
            \\"spans\\": []
        }
    ],
    \\"code\\": {
        \\"code\\": \\"unused_assignments\\",
        \\"explanation\\": null
    },
    \\"level\\": \\"warning\\",
    \\"message\\": \\"value assigned to \`bar\` is never read\\",
    \\"spans\\": [
        {
            \\"byte_end\\": 405,
            \\"byte_start\\": 402,
            \\"column_end\\": 8,
            \\"column_start\\": 5,
            \\"expansion\\": null,
            \\"file_name\\": \\"src/main.rs\\",
            \\"is_primary\\": true,
            \\"label\\": null,
            \\"line_end\\": 33,
            \\"line_start\\": 33,
            \\"suggested_replacement\\": null,
            \\"suggestion_applicability\\": null,
            \\"text\\": [
                {
                    \\"highlight_end\\": 8,
                    \\"highlight_start\\": 5,
                    \\"text\\": \\"    bar = foo;\\"
                }
            ]
        }
    ]
}",
        "start_line": 33,
        "title": "value assigned to \`bar\` is never read",
      },
      Object {
        "annotation_level": "failure",
        "end_line": 25,
        "message": "warning: unused \`std::result::Result\` that must be used
  --> src/main.rs:25:5
   |
25 |     f.read(&mut buf);
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: \`#[warn(unused_must_use)]\` on by default
   = note: this \`Result\` may be an \`Err\` variant, which should be handled

",
        "path": "src/main.rs",
        "raw_details": "{
    \\"rendered\\": \\"warning: unused \`std::result::Result\` that must be used\\\\n  --> src/main.rs:25:5\\\\n   |\\\\n25 |     f.read(&mut buf);\\\\n   |     ^^^^^^^^^^^^^^^^^\\\\n   |\\\\n   = note: \`#[warn(unused_must_use)]\` on by default\\\\n   = note: this \`Result\` may be an \`Err\` variant, which should be handled\\\\n\\\\n\\",
    \\"children\\": [
        {
            \\"code\\": null,
            \\"level\\": \\"note\\",
            \\"message\\": \\"\`#[warn(unused_must_use)]\` on by default\\",
            \\"rendered\\": null,
            \\"spans\\": []
        },
        {
            \\"code\\": null,
            \\"level\\": \\"note\\",
            \\"message\\": \\"this \`Result\` may be an \`Err\` variant, which should be handled\\",
            \\"rendered\\": null,
            \\"spans\\": []
        }
    ],
    \\"code\\": {
        \\"code\\": \\"unused_must_use\\",
        \\"explanation\\": null
    },
    \\"level\\": \\"warning\\",
    \\"message\\": \\"unused \`std::result::Result\` that must be used\\",
    \\"spans\\": [
        {
            \\"byte_end\\": 336,
            \\"byte_start\\": 319,
            \\"column_end\\": 22,
            \\"column_start\\": 5,
            \\"expansion\\": null,
            \\"file_name\\": \\"src/main.rs\\",
            \\"is_primary\\": true,
            \\"label\\": null,
            \\"line_end\\": 25,
            \\"line_start\\": 25,
            \\"suggested_replacement\\": null,
            \\"suggestion_applicability\\": null,
            \\"text\\": [
                {
                    \\"highlight_end\\": 22,
                    \\"highlight_start\\": 5,
                    \\"text\\": \\"    f.read(&mut buf);\\"
                }
            ]
        }
    ]
}",
        "start_line": 25,
        "title": "unused \`std::result::Result\` that must be used",
      },
    ],
    "summary": "Total of 6 issues",
    "text": "## Results

| Message level           | Amount |
| ----------------------- | ------ |
| Internal compiler error |      0 |
| Error                   |      0 |
| Warning                 |     14 |
| Note                    |      0 |
| Help                    |      0 |",
    "title": "Total of 6 issues",
  },
  "status": "completed",
}
`;

exports[`checks/cargo-check converts successful cargo-check 1`] = `
Object {
  "completed_at": Any<String>,
  "conclusion": "success",
  "head_sha": "11963e3cb7ecbb9247f638cc0fb047173a62cf7a",
  "name": "cargo-check",
  "output": Object {
    "annotations": Array [],
    "summary": "Found no issues",
    "title": "Found no issues",
  },
  "status": "completed",
}
`;
