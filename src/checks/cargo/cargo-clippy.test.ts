import { cargoClippyCheck } from './cargo-clippy'
import { cargoClippyFailedOutput } from './resources/cargo-clippy-text'

describe('checks/clippy', () => {
  it('converts successful clippy', () => {
    const result = cargoClippyCheck({ data: [], sha: '11963e3cb7ecbb9247f638cc0fb047173a62cf7a' })
    expect(result).toEqual({
      name: 'cargo clippy',
      head_sha: '11963e3cb7ecbb9247f638cc0fb047173a62cf7a',
      completed_at: expect.any(String),
      conclusion: 'success',
      status: 'completed',
      output: {
        title: 'Found no issues',
        summary: 'Found no issues',
        annotations: []
      }
    })
  })
  it('converts failed clippy', () => {
    const result = cargoClippyCheck({ data: cargoClippyFailedOutput, sha: '11963e3cb7ecbb9247f638cc0fb047173a62cf7a' })
    expect(result).toEqual({
      name: 'cargo clippy',
      head_sha: '11963e3cb7ecbb9247f638cc0fb047173a62cf7a',
      conclusion: 'failure',
      status: 'completed',
      completed_at: expect.any(String),
      output: {
        title: 'Total of 12 issues',
        summary: 'Total of 12 issues',
        text:
          '## Results\n\n' +
          '| Message level           | Amount |\n' +
          '| ----------------------- | ------ |\n' +
          '| Internal compiler error |      0 |\n' +
          '| Error                   |      2 |\n' +
          '| Warning                 |     10 |\n' +
          '| Note                    |      0 |\n' +
          '| Help                    |      0 |',
        annotations: [
          {
            path: 'Cargo.toml',
            start_line: 32,
            end_line: 33,
            annotation_level: 'failure',
            message: 'this looks like you are trying to swap `foo` and `bar`',
            raw_details:
              '{\n    "rendered": "error: this looks like you are trying to swap `foo` and `bar`\\n  --> src/main.rs:32:5\\n   |\\n32 | /     foo = bar;\\n33 | |     bar = foo;\\n   | |_____________^ help: try: `std::mem::swap(&mut foo, &mut bar)`\\n   |\\n   = note: `#[deny(clippy::almost_swapped)]` on by default\\n   = note: or maybe you should use `std::mem::replace`?\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[deny(clippy::almost_swapped)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "or maybe you should use `std::mem::replace`?",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "try",\n            "rendered": null,\n            "spans": [\n                {\n                    "byte_end": 411,\n                    "byte_start": 387,\n                    "column_end": 14,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 33,\n                    "line_start": 32,\n                    "suggested_replacement": "std::mem::swap(&mut foo, &mut bar)",\n                    "suggestion_applicability": "MaybeIncorrect",\n                    "text": [\n                        {\n                            "highlight_end": 15,\n                            "highlight_start": 5,\n                            "text": "    foo = bar;"\n                        },\n                        {\n                            "highlight_end": 14,\n                            "highlight_start": 1,\n                            "text": "    bar = foo;"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    "code": {\n        "code": "clippy::almost_swapped",\n        "explanation": null\n    },\n    "level": "error",\n    "message": "this looks like you are trying to swap `foo` and `bar`",\n    "spans": [\n        {\n            "byte_end": 411,\n            "byte_start": 387,\n            "column_end": 14,\n            "column_start": 5,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 33,\n            "line_start": 32,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 15,\n                    "highlight_start": 5,\n                    "text": "    foo = bar;"\n                },\n                {\n                    "highlight_end": 14,\n                    "highlight_start": 1,\n                    "text": "    bar = foo;"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 15,
            end_line: 15,
            annotation_level: 'failure',
            message: 'use of a blacklisted/placeholder name `foo`',
            raw_details:
              '{\n    "rendered": "warning: use of a blacklisted/placeholder name `foo`\\n  --> src/main.rs:15:11\\n   |\\n15 |       let foo = foo();\\n   |           ^^^\\n   |\\n   = note: `#[warn(clippy::blacklisted_name)]` on by default\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::blacklisted_name)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name",\n            "rendered": null,\n            "spans": []\n        }\n    ],\n    "code": {\n        "code": "clippy::blacklisted_name",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "use of a blacklisted/placeholder name `foo`",\n    "spans": [\n        {\n            "byte_end": 160,\n            "byte_start": 157,\n            "column_end": 14,\n            "column_start": 11,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 15,\n            "line_start": 15,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 14,\n                    "highlight_start": 11,\n                    "text": "      let foo = foo();"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 29,
            end_line: 29,
            annotation_level: 'failure',
            message: 'use of a blacklisted/placeholder name `foo`',
            raw_details:
              '{\n    "rendered": "warning: use of a blacklisted/placeholder name `foo`\\n  --> src/main.rs:29:13\\n   |\\n29 |     let mut foo = 0;\\n   |             ^^^\\n   |\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name",\n            "rendered": null,\n            "spans": []\n        }\n    ],\n    "code": {\n        "code": "clippy::blacklisted_name",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "use of a blacklisted/placeholder name `foo`",\n    "spans": [\n        {\n            "byte_end": 355,\n            "byte_start": 352,\n            "column_end": 16,\n            "column_start": 13,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 29,\n            "line_start": 29,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 16,\n                    "highlight_start": 13,\n                    "text": "    let mut foo = 0;"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 37,
            end_line: 37,
            annotation_level: 'failure',
            message:
              'in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`',
            raw_details:
              '{\n    "rendered": "warning: in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\\n  --> src/main.rs:37:5\\n   |\\n37 |     if { let b = false; b } {}\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `let res = { let b = false; b }; if res`\\n   |\\n   = note: `#[warn(clippy::blocks_in_if_conditions)]` on by default\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_if_conditions\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::blocks_in_if_conditions)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_if_conditions",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "try",\n            "rendered": null,\n            "spans": [\n                {\n                    "byte_end": 443,\n                    "byte_start": 420,\n                    "column_end": 28,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 37,\n                    "line_start": 37,\n                    "suggested_replacement": "let res = { let b = false; b }; if res",\n                    "suggestion_applicability": "MachineApplicable",\n                    "text": [\n                        {\n                            "highlight_end": 28,\n                            "highlight_start": 5,\n                            "text": "    if { let b = false; b } {}"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    "code": {\n        "code": "clippy::blocks_in_if_conditions",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`",\n    "spans": [\n        {\n            "byte_end": 443,\n            "byte_start": 420,\n            "column_end": 28,\n            "column_start": 5,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 37,\n            "line_start": 37,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 28,\n                    "highlight_start": 5,\n                    "text": "    if { let b = false; b } {}"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 37,
            end_line: 37,
            annotation_level: 'failure',
            message: 'returning the result of a `let` binding from a block',
            raw_details:
              '{\n    "rendered": "warning: returning the result of a `let` binding from a block\\n  --> src/main.rs:37:25\\n   |\\n37 |     if { let b = false; b } {}\\n   |          -------------- ^\\n   |          |\\n   |          unnecessary `let` binding\\n   |\\n   = note: `#[warn(clippy::let_and_return)]` on by default\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\\nhelp: return the expression directly\\n   |\\n37 |     if {  false } {}\\n   |         --^^^^^\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::let_and_return)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "return the expression directly",\n            "rendered": null,\n            "spans": [\n                {\n                    "byte_end": 439,\n                    "byte_start": 425,\n                    "column_end": 24,\n                    "column_start": 10,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 37,\n                    "line_start": 37,\n                    "suggested_replacement": "",\n                    "suggestion_applicability": "MachineApplicable",\n                    "text": [\n                        {\n                            "highlight_end": 24,\n                            "highlight_start": 10,\n                            "text": "    if { let b = false; b } {}"\n                        }\n                    ]\n                },\n                {\n                    "byte_end": 441,\n                    "byte_start": 440,\n                    "column_end": 26,\n                    "column_start": 25,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 37,\n                    "line_start": 37,\n                    "suggested_replacement": "false",\n                    "suggestion_applicability": "MachineApplicable",\n                    "text": [\n                        {\n                            "highlight_end": 26,\n                            "highlight_start": 25,\n                            "text": "    if { let b = false; b } {}"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    "code": {\n        "code": "clippy::let_and_return",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "returning the result of a `let` binding from a block",\n    "spans": [\n        {\n            "byte_end": 439,\n            "byte_start": 425,\n            "column_end": 24,\n            "column_start": 10,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": false,\n            "label": "unnecessary `let` binding",\n            "line_end": 37,\n            "line_start": 37,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 24,\n                    "highlight_start": 10,\n                    "text": "    if { let b = false; b } {}"\n                }\n            ]\n        },\n        {\n            "byte_end": 441,\n            "byte_start": 440,\n            "column_end": 26,\n            "column_start": 25,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 37,\n            "line_start": 37,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 26,\n                    "highlight_start": 25,\n                    "text": "    if { let b = false; b } {}"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 32,
            end_line: 33,
            annotation_level: 'failure',
            message: 'this looks like you are trying to swap `foo` and `bar`',
            raw_details:
              '{\n    "rendered": "error: this looks like you are trying to swap `foo` and `bar`\\n  --> src/main.rs:32:5\\n   |\\n32 | /     foo = bar;\\n33 | |     bar = foo;\\n   | |_____________^ help: try: `std::mem::swap(&mut foo, &mut bar)`\\n   |\\n   = note: `#[deny(clippy::almost_swapped)]` on by default\\n   = note: or maybe you should use `std::mem::replace`?\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[deny(clippy::almost_swapped)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "or maybe you should use `std::mem::replace`?",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "try",\n            "rendered": null,\n            "spans": [\n                {\n                    "byte_end": 411,\n                    "byte_start": 387,\n                    "column_end": 14,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 33,\n                    "line_start": 32,\n                    "suggested_replacement": "std::mem::swap(&mut foo, &mut bar)",\n                    "suggestion_applicability": "MaybeIncorrect",\n                    "text": [\n                        {\n                            "highlight_end": 15,\n                            "highlight_start": 5,\n                            "text": "    foo = bar;"\n                        },\n                        {\n                            "highlight_end": 14,\n                            "highlight_start": 1,\n                            "text": "    bar = foo;"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    "code": {\n        "code": "clippy::almost_swapped",\n        "explanation": null\n    },\n    "level": "error",\n    "message": "this looks like you are trying to swap `foo` and `bar`",\n    "spans": [\n        {\n            "byte_end": 411,\n            "byte_start": 387,\n            "column_end": 14,\n            "column_start": 5,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 33,\n            "line_start": 32,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 15,\n                    "highlight_start": 5,\n                    "text": "    foo = bar;"\n                },\n                {\n                    "highlight_end": 14,\n                    "highlight_start": 1,\n                    "text": "    bar = foo;"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 15,
            end_line: 15,
            annotation_level: 'failure',
            message: 'use of a blacklisted/placeholder name `foo`',
            raw_details:
              '{\n    "rendered": "warning: use of a blacklisted/placeholder name `foo`\\n  --> src/main.rs:15:11\\n   |\\n15 |       let foo = foo();\\n   |           ^^^\\n   |\\n   = note: `#[warn(clippy::blacklisted_name)]` on by default\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::blacklisted_name)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name",\n            "rendered": null,\n            "spans": []\n        }\n    ],\n    "code": {\n        "code": "clippy::blacklisted_name",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "use of a blacklisted/placeholder name `foo`",\n    "spans": [\n        {\n            "byte_end": 160,\n            "byte_start": 157,\n            "column_end": 14,\n            "column_start": 11,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 15,\n            "line_start": 15,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 14,\n                    "highlight_start": 11,\n                    "text": "      let foo = foo();"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 29,
            end_line: 29,
            annotation_level: 'failure',
            message: 'use of a blacklisted/placeholder name `foo`',
            raw_details:
              '{\n    "rendered": "warning: use of a blacklisted/placeholder name `foo`\\n  --> src/main.rs:29:13\\n   |\\n29 |     let mut foo = 0;\\n   |             ^^^\\n   |\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blacklisted_name",\n            "rendered": null,\n            "spans": []\n        }\n    ],\n    "code": {\n        "code": "clippy::blacklisted_name",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "use of a blacklisted/placeholder name `foo`",\n    "spans": [\n        {\n            "byte_end": 355,\n            "byte_start": 352,\n            "column_end": 16,\n            "column_start": 13,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 29,\n            "line_start": 29,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 16,\n                    "highlight_start": 13,\n                    "text": "    let mut foo = 0;"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 37,
            end_line: 37,
            annotation_level: 'failure',
            message:
              'in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`',
            raw_details:
              '{\n    "rendered": "warning: in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\\n  --> src/main.rs:37:5\\n   |\\n37 |     if { let b = false; b } {}\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `let res = { let b = false; b }; if res`\\n   |\\n   = note: `#[warn(clippy::blocks_in_if_conditions)]` on by default\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_if_conditions\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::blocks_in_if_conditions)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_if_conditions",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "try",\n            "rendered": null,\n            "spans": [\n                {\n                    "byte_end": 443,\n                    "byte_start": 420,\n                    "column_end": 28,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 37,\n                    "line_start": 37,\n                    "suggested_replacement": "let res = { let b = false; b }; if res",\n                    "suggestion_applicability": "MachineApplicable",\n                    "text": [\n                        {\n                            "highlight_end": 28,\n                            "highlight_start": 5,\n                            "text": "    if { let b = false; b } {}"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    "code": {\n        "code": "clippy::blocks_in_if_conditions",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`",\n    "spans": [\n        {\n            "byte_end": 443,\n            "byte_start": 420,\n            "column_end": 28,\n            "column_start": 5,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 37,\n            "line_start": 37,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 28,\n                    "highlight_start": 5,\n                    "text": "    if { let b = false; b } {}"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 37,
            end_line: 37,
            annotation_level: 'failure',
            message: 'returning the result of a `let` binding from a block',
            raw_details:
              '{\n    "rendered": "warning: returning the result of a `let` binding from a block\\n  --> src/main.rs:37:25\\n   |\\n37 |     if { let b = false; b } {}\\n   |          -------------- ^\\n   |          |\\n   |          unnecessary `let` binding\\n   |\\n   = note: `#[warn(clippy::let_and_return)]` on by default\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\\nhelp: return the expression directly\\n   |\\n37 |     if {  false } {}\\n   |         --^^^^^\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::let_and_return)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "return the expression directly",\n            "rendered": null,\n            "spans": [\n                {\n                    "byte_end": 439,\n                    "byte_start": 425,\n                    "column_end": 24,\n                    "column_start": 10,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 37,\n                    "line_start": 37,\n                    "suggested_replacement": "",\n                    "suggestion_applicability": "MachineApplicable",\n                    "text": [\n                        {\n                            "highlight_end": 24,\n                            "highlight_start": 10,\n                            "text": "    if { let b = false; b } {}"\n                        }\n                    ]\n                },\n                {\n                    "byte_end": 441,\n                    "byte_start": 440,\n                    "column_end": 26,\n                    "column_start": 25,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": true,\n                    "label": null,\n                    "line_end": 37,\n                    "line_start": 37,\n                    "suggested_replacement": "false",\n                    "suggestion_applicability": "MachineApplicable",\n                    "text": [\n                        {\n                            "highlight_end": 26,\n                            "highlight_start": 25,\n                            "text": "    if { let b = false; b } {}"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    "code": {\n        "code": "clippy::let_and_return",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "returning the result of a `let` binding from a block",\n    "spans": [\n        {\n            "byte_end": 439,\n            "byte_start": 425,\n            "column_end": 24,\n            "column_start": 10,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": false,\n            "label": "unnecessary `let` binding",\n            "line_end": 37,\n            "line_start": 37,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 24,\n                    "highlight_start": 10,\n                    "text": "    if { let b = false; b } {}"\n                }\n            ]\n        },\n        {\n            "byte_end": 441,\n            "byte_start": 440,\n            "column_end": 26,\n            "column_start": 25,\n            "expansion": null,\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 37,\n            "line_start": 37,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 26,\n                    "highlight_start": 25,\n                    "text": "    if { let b = false; b } {}"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 51,
            end_line: 51,
            annotation_level: 'failure',
            message: '`assert!(true)` will be optimized out by the compiler',
            raw_details:
              '{\n    "rendered": "warning: `assert!(true)` will be optimized out by the compiler\\n  --> src/main.rs:51:9\\n   |\\n51 |         assert!(true);\\n   |         ^^^^^^^^^^^^^^\\n   |\\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\\n   = help: remove it\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\\n   = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "note",\n            "message": "`#[warn(clippy::assertions_on_constants)]` on by default",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "remove it",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants",\n            "rendered": null,\n            "spans": []\n        }\n    ],\n    "code": {\n        "code": "clippy::assertions_on_constants",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "`assert!(true)` will be optimized out by the compiler",\n    "spans": [\n        {\n            "byte_end": 603,\n            "byte_start": 589,\n            "column_end": 23,\n            "column_start": 9,\n            "expansion": {\n                "def_site_span": {\n                    "byte_end": 41339,\n                    "byte_start": 41183,\n                    "column_end": 6,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "/home/user/.rustup/toolchains/1.49.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs",\n                    "is_primary": false,\n                    "label": null,\n                    "line_end": 1221,\n                    "line_start": 1218,\n                    "suggested_replacement": null,\n                    "suggestion_applicability": null,\n                    "text": [\n                        {\n                            "highlight_end": 1,\n                            "highlight_start": 5,\n                            "text": "    macro_rules! assert {"\n                        },\n                        {\n                            "highlight_end": 1,\n                            "highlight_start": 1,\n                            "text": "        ($cond:expr $(,)?) => {{ /* compiler built-in */ }};"\n                        },\n                        {\n                            "highlight_end": 1,\n                            "highlight_start": 1,\n                            "text": "        ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};"\n                        },\n                        {\n                            "highlight_end": 6,\n                            "highlight_start": 1,\n                            "text": "    }"\n                        }\n                    ]\n                },\n                "macro_decl_name": "assert!",\n                "span": {\n                    "byte_end": 603,\n                    "byte_start": 589,\n                    "column_end": 23,\n                    "column_start": 9,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": false,\n                    "label": null,\n                    "line_end": 51,\n                    "line_start": 51,\n                    "suggested_replacement": null,\n                    "suggestion_applicability": null,\n                    "text": [\n                        {\n                            "highlight_end": 23,\n                            "highlight_start": 9,\n                            "text": "        assert!(true);"\n                        }\n                    ]\n                }\n            },\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 51,\n            "line_start": 51,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 23,\n                    "highlight_start": 9,\n                    "text": "        assert!(true);"\n                }\n            ]\n        }\n    ]\n}'
          },
          {
            path: 'Cargo.toml',
            start_line: 56,
            end_line: 56,
            annotation_level: 'failure',
            message: '`assert!(false)` should probably be replaced',
            raw_details:
              '{\n    "rendered": "warning: `assert!(false)` should probably be replaced\\n  --> src/main.rs:56:5\\n   |\\n56 |     assert!(false);\\n   |     ^^^^^^^^^^^^^^^\\n   |\\n   = help: use `panic!()` or `unreachable!()`\\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\\n   = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\\n\\n",\n    "children": [\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "use `panic!()` or `unreachable!()`",\n            "rendered": null,\n            "spans": []\n        },\n        {\n            "children": [],\n            "code": null,\n            "level": "help",\n            "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants",\n            "rendered": null,\n            "spans": []\n        }\n    ],\n    "code": {\n        "code": "clippy::assertions_on_constants",\n        "explanation": null\n    },\n    "level": "warning",\n    "message": "`assert!(false)` should probably be replaced",\n    "spans": [\n        {\n            "byte_end": 660,\n            "byte_start": 645,\n            "column_end": 20,\n            "column_start": 5,\n            "expansion": {\n                "def_site_span": {\n                    "byte_end": 41339,\n                    "byte_start": 41183,\n                    "column_end": 6,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "/home/user/.rustup/toolchains/1.49.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs",\n                    "is_primary": false,\n                    "label": null,\n                    "line_end": 1221,\n                    "line_start": 1218,\n                    "suggested_replacement": null,\n                    "suggestion_applicability": null,\n                    "text": [\n                        {\n                            "highlight_end": 26,\n                            "highlight_start": 5,\n                            "text": "    macro_rules! assert {"\n                        },\n                        {\n                            "highlight_end": 61,\n                            "highlight_start": 1,\n                            "text": "        ($cond:expr $(,)?) => {{ /* compiler built-in */ }};"\n                        },\n                        {\n                            "highlight_end": 68,\n                            "highlight_start": 1,\n                            "text": "        ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};"\n                        },\n                        {\n                            "highlight_end": 6,\n                            "highlight_start": 1,\n                            "text": "    }"\n                        }\n                    ]\n                },\n                "macro_decl_name": "assert!",\n                "span": {\n                    "byte_end": 660,\n                    "byte_start": 645,\n                    "column_end": 20,\n                    "column_start": 5,\n                    "expansion": null,\n                    "file_name": "src/main.rs",\n                    "is_primary": false,\n                    "label": null,\n                    "line_end": 56,\n                    "line_start": 56,\n                    "suggested_replacement": null,\n                    "suggestion_applicability": null,\n                    "text": [\n                        {\n                            "highlight_end": 20,\n                            "highlight_start": 5,\n                            "text": "    assert!(false);"\n                        }\n                    ]\n                }\n            },\n            "file_name": "src/main.rs",\n            "is_primary": true,\n            "label": null,\n            "line_end": 56,\n            "line_start": 56,\n            "suggested_replacement": null,\n            "suggestion_applicability": null,\n            "text": [\n                {\n                    "highlight_end": 20,\n                    "highlight_start": 5,\n                    "text": "    assert!(false);"\n                }\n            ]\n        }\n    ]\n}'
          }
        ]
      }
    })
  })
  it('converts buggy clippy', () => {
    const result = cargoClippyCheck({
      data: {} as any,
      sha: '11963e3cb7ecbb9247f638cc0fb047173a62cf7a'
    })
    expect(result).toEqual({
      conclusion: 'skipped',
      completed_at: expect.any(String),
      head_sha: '11963e3cb7ecbb9247f638cc0fb047173a62cf7a',
      name: 'cargo clippy',
      status: 'completed',
      output: {
        title: 'Unexpected clippy output',
        summary: ''
      }
    })
  })
})
