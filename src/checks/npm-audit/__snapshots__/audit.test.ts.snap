// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checks/audit converts failed audit 1`] = `
Object {
  "completed_at": StringMatching /\\^\\\\d\\{4\\}/,
  "conclusion": "neutral",
  "head_sha": "abcdefg",
  "name": "audit",
  "output": Object {
    "summary": "Found **32** vulnerabilities (**23** low, **6** moderate, **2** high, **1** critical) in 965 scanned packages",
    "text": "## Critical: Command Injection
Affected versions of \`growl\` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.

[Read about advisory 146 at nodesecurity.io](https://nodesecurity.io/advisories/146)

#### growl (<1.10.2)
 - **DEV:** \`mocha\` > \`growl\`

#### Recommendation
Update to version 1.10.2 or later.

## High: Regular Expression Denial of Service
Affected versions of \`tough-cookie\` are susceptible to a regular expression denial of service.

The amplification on this vulnerability is relatively low - it takes around 2 seconds for the engine to execute on a malicious input which is 50,000 characters in length.

If node was compiled using the \`-DHTTP_MAX_HEADER_SIZE\` however, the impact of the vulnerability can be significant, as the primary limitation for the vulnerability is the default max HTTP header length in node.

[Read about advisory 525 at nodesecurity.io](https://nodesecurity.io/advisories/525)

#### tough-cookie (<2.3.3)
 - **DEV:** \`coveralls\` > \`request\` > \`tough-cookie\`

#### Recommendation
Update to version 2.3.3 or later.

## High: Regular Expression Denial of Service
Versions of \`sshpk\` before 1.14.1 are vulnerable to regular expression denial of service when parsing crafted invalid public keys.

[Read about advisory 606 at nodesecurity.io](https://nodesecurity.io/advisories/606)

#### sshpk (<1.14.1)
 - **DEV:** \`coveralls\` > \`request\` > \`http-signature\` > \`sshpk\`

#### Recommendation
Update to version 1.14.1 or later.

## Moderate: Prototype pollution
Versions of \`hoek\` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.

The \`merge\` function, and the \`applyToDefaults\` and \`applyToDefaultsWithShallow\` functions which leverage \`merge\` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the \`__proto__\` property.

This can be demonstrated like so:

\`\`\`javascript
var Hoek = require('hoek');
var malicious_payload = '{\\"__proto__\\":{\\"oops\\":\\"It works !\\"}}';

var a = {};
console.log(\\"Before : \\" + a.oops);
Hoek.merge({}, JSON.parse(malicious_payload));
console.log(\\"After : \\" + a.oops);
\`\`\`

This type of attack can be used to overwrite existing properties causing a potential denial of service.

[Read about advisory 566 at nodesecurity.io](https://nodesecurity.io/advisories/566)

#### hoek (<= 4.2.0 || >= 5.0.0 < 5.0.3)
 - **DEV:** \`coveralls\` > \`request\` > \`hawk\` > \`boom\` > \`hoek\`
 - **DEV:** \`coveralls\` > \`request\` > \`hawk\` > \`cryptiles\` > \`boom\` > \`hoek\`
 - **DEV:** \`coveralls\` > \`request\` > \`hawk\` > \`hoek\`
 - **DEV:** \`coveralls\` > \`request\` > \`hawk\` > \`sntp\` > \`hoek\`

#### Recommendation
Update to version 4.2.1, 5.0.3 or later.

## Moderate: Memory Exposure
Versions of \`tunnel-agent\` before 0.6.0 are vulnerable to memory exposure.

This is exploitable if user supplied input is provided to the auth value and is a number.

Proof-of-concept:
\`\`\`js
require('request')({
  method: 'GET',
  uri: 'http://www.example.com',
  tunnel: true,
  proxy:{
    protocol: 'http:',
    host:'127.0.0.1',
    port:8080,
    auth:USERSUPPLIEDINPUT // number
  }
});
\`\`\`

[Read about advisory 598 at nodesecurity.io](https://nodesecurity.io/advisories/598)

#### tunnel-agent (<0.6.0)
 - **DEV:** \`coveralls\` > \`request\` > \`tunnel-agent\`

#### Recommendation
Update to version 0.6.0 or later.

## Moderate: Out-of-bounds Read
All versions of \`stringstream\` are vulnerable to out-of-bounds read as it allocates uninitialized Buffers when number is passed in input stream on Node.js 4.x and below.

[Read about advisory 664 at nodesecurity.io](https://nodesecurity.io/advisories/664)

#### stringstream (<=0.0.5)
 - **DEV:** \`coveralls\` > \`request\` > \`stringstream\`

#### Recommendation
No fix is currently available for this vulnerability. It is our recommendation to not install or use this module if user input is being passed in to \`stringstream\`.


## Low: Cryptographically Weak PRNG
Affected versions of \`randomatic\` generate random values using a cryptographically weak psuedo-random number generator. This may result in predictable values instead of random values as intended.



[Read about advisory 157 at nodesecurity.io](https://nodesecurity.io/advisories/157)

#### randomatic (<3.0.0)
 - **DEV:** \`nyc\` > \`micromatch\` > \`braces\` > \`expand-range\` > \`fill-range\` > \`randomatic\`
 - **DEV:** \`nyc\` > \`test-exclude\` > \`micromatch\` > \`braces\` > \`expand-range\` > \`fill-range\` > \`randomatic\`

#### Recommendation
Update to version 3.0.0 or later.


## Low: Regular Expression Denial of Service
Affected versions of \`debug\` are vulnerable to regular expression denial of service when untrusted user input is passed into the \`o\` formatter. 

As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.

[Read about advisory 534 at nodesecurity.io](https://nodesecurity.io/advisories/534)

#### debug (<= 2.6.8 || >= 3.0.0 <= 3.0.1)
 - **DEV:** \`babel-eslint\` > \`babel-traverse\` > \`debug\`
 - **DEV:** \`eslint\` > \`debug\`
 - **DEV:** \`mocha\` > \`debug\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-template\` > \`babel-traverse\` > \`debug\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-traverse\` > \`debug\`
 - **DEV:** \`nyc\` > \`istanbul-lib-source-maps\` > \`debug\`

#### Recommendation
Version 2.x.x: Update to version 2.6.9 or later.
Version 3.x.x: Update to version 3.1.0 or later.


## Low: Prototype Pollution
Versions of \`lodash\` before 4.17.5 are vulnerable to prototype pollution. 

The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of \`Object\` via \`__proto__\` causing the addition or modification of an existing property that will exist on all objects.



[Read about advisory 577 at nodesecurity.io](https://nodesecurity.io/advisories/577)

#### lodash (<4.17.5)
 - **DEV:** \`babel-eslint\` > \`babel-traverse\` > \`babel-types\` > \`lodash\`
 - **DEV:** \`babel-eslint\` > \`babel-traverse\` > \`lodash\`
 - **DEV:** \`babel-eslint\` > \`babel-types\` > \`lodash\`
 - **DEV:** \`eslint\` > \`inquirer\` > \`lodash\`
 - **DEV:** \`eslint\` > \`lodash\`
 - **DEV:** \`eslint\` > \`table\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-generator\` > \`babel-types\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-generator\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-template\` > \`babel-traverse\` > \`babel-types\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-template\` > \`babel-traverse\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-template\` > \`babel-types\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-template\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-traverse\` > \`babel-types\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-traverse\` > \`lodash\`
 - **DEV:** \`nyc\` > \`istanbul-lib-instrument\` > \`babel-types\` > \`lodash\`

#### Recommendation
Update to version 4.17.5 or later.",
    "title": "npm audit security report",
  },
  "status": "completed",
}
`;

exports[`checks/audit converts failed audit v2 1`] = `
Object {
  "completed_at": StringMatching /\\^\\\\d\\{4\\}/,
  "conclusion": "neutral",
  "head_sha": "c61a4ae014360e064eb2a9f76c8a6a55d05e5b88",
  "name": "audit",
  "output": Object {
    "summary": "Found **84** vulnerabilities (**30** low, **3** moderate, **7** high, **2** critical, **42** total) in 0 scanned packages",
    "text": "## Critical: eslint-utils (1.2.0 - 1.4.0)
* Arbitrary Code Execution (1118: https://npmjs.com/advisories/1118)

## Critical: handlebars (<=4.7.3)
* Prototype Pollution (1164: https://npmjs.com/advisories/1164)
* Denial of Service (1300: https://npmjs.com/advisories/1300)
* Arbitrary Code Execution (1316: https://npmjs.com/advisories/1316)
* Arbitrary Code Execution (1324: https://npmjs.com/advisories/1324)
* Prototype Pollution (755: https://npmjs.com/advisories/755)
* via optimist

## High: axios (<=0.21.0)
* Server-Side Request Forgery (1594: https://npmjs.com/advisories/1594)
* Denial of Service (880: https://npmjs.com/advisories/880)

## High: js-yaml (<=3.13.0)
* Denial of Service (788: https://npmjs.com/advisories/788)
* Code Injection (813: https://npmjs.com/advisories/813)

## High: lodash (<=4.17.18)
* Prototype Pollution (1065: https://npmjs.com/advisories/1065)
* Prototype Pollution (1523: https://npmjs.com/advisories/1523)
* Prototype Pollution (782: https://npmjs.com/advisories/782)

## High: mixin-deep (<=1.3.1 || 2.0.0)
* Prototype Pollution (1013: https://npmjs.com/advisories/1013)

## High: set-value (<=2.0.0 || 3.0.0)
* Prototype Pollution (1012: https://npmjs.com/advisories/1012)

## High: tar (<2.2.2 || >=3.0.0 <4.4.2)
* Arbitrary File Overwrite (803: https://npmjs.com/advisories/803)

## High: union-value (<=1.0.0 || 2.0.0)
* via set-value

## Moderate: acorn (5.5.0 - 5.7.3 || 6.0.0 - 6.4.0 || 7.0.0 - 7.1.0)
* Regular Expression Denial of Service (1488: https://npmjs.com/advisories/1488)

## Moderate: just-extend (<4.0.0)
* Prototype Pollution (780: https://npmjs.com/advisories/780)

## Moderate: nise (1.0.1 - 1.4.7)
* via just-extend

## Low: babel-jest (14.2.0-alpha.ca8bfb6e - 24.0.0-alpha.16)
* via babel-plugin-istanbul

## Low: babel-plugin-istanbul (<=5.0.0)
* via test-exclude

## Low: braces (<2.3.1)
* Regular Expression Denial of Service (786: https://npmjs.com/advisories/786)

## Low: expect (21.0.0-beta.1 - 22.4.3 || 23.4.0 - 23.6.0)
* via jest-message-util

## Low: ini (<1.3.6)
* Prototype Pollution (1589: https://npmjs.com/advisories/1589)

## Low: jest (18.5.0-alpha.7da3df39 - 22.4.4 || 23.4.0 - 23.6.0)
* via jest-cli

## Low: jest-cli (12.1.1-alpha.2935e14d || 12.1.2-alpha.6230044c - 24.8.0)
* via jest-config
* via jest-message-util
* via jest-runner
* via jest-runtime
* via jest-snapshot
* via micromatch
* via yargs

## Low: jest-config (18.5.0-alpha.7da3df39 - 24.0.0-alpha.16)
* via babel-jest
* via jest-jasmine2
* via jest-util
* via micromatch

## Low: jest-environment-jsdom (18.5.0-alpha.7da3df39 - 22.4.3 || 23.4.0)
* via jest-util

## Low: jest-environment-node (18.5.0-alpha.7da3df39 - 22.4.3 || 23.4.0)
* via jest-util

## Low: jest-haste-map (18.1.0 - 23.1.0 || 23.4.0 - 24.0.0-alpha.16)
* via micromatch

## Low: jest-jasmine2 (18.5.0-alpha.7da3df39 - 22.4.4 || 23.4.0 - 23.6.0)
* via expect
* via jest-message-util
* via jest-snapshot
* via jest-util

## Low: jest-message-util (18.5.0-alpha.7da3df39 - 23.1.0 || 23.4.0 - 24.0.0-alpha.16)
* via micromatch

## Low: jest-resolve-dependencies (23.4.0 - 23.6.0)
* via jest-snapshot

## Low: jest-runner (21.0.0-alpha.1 - 22.4.4 || 23.4.0 - 23.6.0)
* via jest-config
* via jest-runtime

## Low: jest-runtime (12.1.1-alpha.2935e14d - 24.8.0)
* via babel-plugin-istanbul
* via jest-config
* via jest-haste-map
* via jest-message-util
* via jest-util
* via micromatch
* via yargs

## Low: jest-snapshot (23.4.0 - 23.6.0)
* via jest-message-util

## Low: jest-util (18.5.0-alpha.7da3df39 - 22.4.3 || 23.4.0)
* via jest-message-util

## Low: kind-of (6.0.0 - 6.0.2)
* Validation Bypass (1490: https://npmjs.com/advisories/1490)

## Low: knex (0.6.8 - 0.16.3)
* via minimist

## Low: mem (<4.0.0)
* Denial of Service (1084: https://npmjs.com/advisories/1084)

## Low: micromatch (0.2.0 - 2.3.11)
* via braces

## Low: minimist (<0.2.1 || >=1.0.0 <1.2.3)
* Prototype Pollution (1179: https://npmjs.com/advisories/1179)

## Low: mkdirp (0.4.1 - 0.5.1)
* via minimist

## Low: optimist (>=0.6.0)
* via minimist

## Low: os-locale (2.0.0 - 3.0.0)
* via mem

## Low: test-exclude (<=4.2.3)
* via micromatch

## Low: ts-jest (23.10.0-beta.1 - 25.2.1)
* via yargs-parser

## Low: yargs (4.0.0-alpha1 - 12.0.5 || 14.1.0 || 15.0.0 - 15.2.0)
* via os-locale
* via yargs-parser

## Low: yargs-parser (<=13.1.1 || 14.0.0 - 15.0.0 || 16.0.0 - 18.1.1)
* Prototype Pollution (1500: https://npmjs.com/advisories/1500)",
    "title": "npm audit security report",
  },
  "status": "completed",
}
`;

exports[`checks/audit converts successful audit 1`] = `
Object {
  "completed_at": StringMatching /\\^\\\\d\\{4\\}/,
  "conclusion": "success",
  "head_sha": "c61a4ae014360e064eb2a9f76c8a6a55d05e5b88",
  "name": "audit",
  "output": Object {
    "summary": "Found **0** vulnerabilities in 4982 scanned packages",
    "text": undefined,
    "title": "npm audit security report",
  },
  "status": "completed",
}
`;

exports[`checks/audit converts successful audit v2 1`] = `
Object {
  "completed_at": StringMatching /\\^\\\\d\\{4\\}/,
  "conclusion": "success",
  "head_sha": "c61a4ae014360e064eb2a9f76c8a6a55d05e5b88",
  "name": "audit",
  "output": Object {
    "summary": "Found **0** vulnerabilities in 0 scanned packages",
    "text": undefined,
    "title": "npm audit security report",
  },
  "status": "completed",
}
`;
